// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMS.AppointmentAPI.DataModels;

namespace PMS.AppointmentAPI.Migrations
{
    [DbContext(typeof(AppointmentDbContext))]
    [Migration("20221012145155_Appointment_Api")]
    partial class Appointment_Api
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PMS.AppointmentAPI.DataModels.AppointmentModel", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AppointmentEnddate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AppointmentStartdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Appointmentdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meetingtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("PMS.AppointmentAPI.DataModels.SlotTimings", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("SlotEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SlotStart")
                        .HasColumnType("time");

                    b.Property<string>("SlotTiming")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SlotId");

                    b.ToTable("Slots");

                    b.HasData(
                        new
                        {
                            SlotId = 1,
                            SlotEnd = new TimeSpan(0, 11, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 10, 0, 0, 0),
                            SlotTiming = "10AM - 11AM"
                        },
                        new
                        {
                            SlotId = 2,
                            SlotEnd = new TimeSpan(0, 12, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 11, 0, 0, 0),
                            SlotTiming = "11 AM - 12 PM"
                        },
                        new
                        {
                            SlotId = 3,
                            SlotEnd = new TimeSpan(0, 13, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 12, 0, 0, 0),
                            SlotTiming = "12 PM - 1 PM"
                        },
                        new
                        {
                            SlotId = 4,
                            SlotEnd = new TimeSpan(0, 14, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 13, 0, 0, 0),
                            SlotTiming = "1 PM - 2PM"
                        },
                        new
                        {
                            SlotId = 5,
                            SlotEnd = new TimeSpan(0, 15, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 14, 0, 0, 0),
                            SlotTiming = "2 PM - 3 PM"
                        },
                        new
                        {
                            SlotId = 6,
                            SlotEnd = new TimeSpan(0, 16, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 15, 0, 0, 0),
                            SlotTiming = "3 PM - 4 PM"
                        },
                        new
                        {
                            SlotId = 7,
                            SlotEnd = new TimeSpan(0, 17, 0, 0, 0),
                            SlotStart = new TimeSpan(0, 16, 0, 0, 0),
                            SlotTiming = "4 PM - 5 PM"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
